plugins {
    id 'fabric-loom' version '0.9.+'
    id 'maven-publish'
    id 'org.cadixdev.licenser' version '0.6.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    for (runConfig in runConfigs) {
        //runConfig.vmArgs.add("-Dmixin.debug.export=true")
    }
}

minecraft {
}

repositories {
    maven {
        url 'https://maven.terraformersmc.com/releases'
    }

    maven {
        url 'https://storage.googleapis.com/devan-maven/'
    }

    maven {
        url 'https://api.modrinth.com/maven'
    }

    maven {
        url 'https://maven.shedaniel.me/'
    }
}

dependencies {
    minecraft('com.mojang:minecraft:' + project.property('minecraft_version'))
    mappings('net.fabricmc:yarn:' + project.property('yarn_mappings') + ':v2')
    modImplementation('net.fabricmc:fabric-loader:' + project.property('loader_version'))
    modImplementation('net.fabricmc.fabric-api:fabric-api:' + project.property('fabric_api_version'))

    modApi('com.terraformersmc:modmenu:' + project.property('mod_menu_version'))
    modApi('maven.modrinth:sandwichable:' + project.property('sandwichable_version'))
    modApi('maven.modrinth:mealapi:' + project.property('meal_api_version'))
    modApi('me.shedaniel.cloth:cloth-config-fabric:' + project.property('cloth_config_version')) {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile) {
    licenseFormat
    options.encoding = 'UTF-8'
}

tasks.named('build') {
    dependsOn tasks.updateLicenses
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from 'LICENSE'
}
